Design Decision Discussion
==========================

Non-integer primary keys

27-Nov; When we first started building the djurk models, we tried to leave the
default Django's surrogate id key (an integer) in addition to Amazon Mechanical
Turk's alphanumeric fields (like hit_id and assignment_id can hold values such
as 21K74J79KQW6TPYFSAOFFD451IGJHF and 2UKSZVXX2Q45MBV1AE7NLW1NSMN7P6
respectively). 

However, when these models were hooked together, we found a problem with how
Django interfaced parents and children. The 'hit_id' field in the parent (HIT
model) is intended to be the Amazon Mechanical Turk HIT ID
(21K74J79KQW6TPYFSAOFFD451IGJHF).

However, in the child, Django uses this same pattern, modelname_id, to refer to
the foreign key of "the other model." For example, in Django, obj.id means go
to the linked object, and retrieve the 'id' field. However, obj_id, means look
up the foreign key field (from the same database table; don't look up the
second database table) and report that id as an integer (not the object of the
child) (because of referential integrity rules, these will be the same value).

Thus, hit_id can refer to the Mechanical Turk hit_id or to the primary
surrogate key (id) of the hit object. We could use the HITId and AssignmentId
as they are called in the Boto/Mechanical Turk API names. However, we're trying
to map the API to the conventions as used by Django/Python users.

Finally, because this is an API and there are delays in querying Amazon
Mechanical Turk for updates, we are not certain how much of an actual impact
character based indexes (instead of integer based indexes) will have in our
performance.  This is still in pre-alpha release. Instead of pre-optimizing, we
will  revisit the character based indexes in a near future time.
